1. Pre-installation 
	a. Make bootable .iso and verify signature 
	b. Check if EFI or BIOS: ls /sys/firmware/efi/efivars
    c. Ping archlinux.org to verify internet connection. If need wifi, set config file in /etc/netctl
    d. Check system clock: timedatectl set-ntp true && timedatectl status
    NOTE: If text too small, at archiso boot menu press 'tab' then: nomodeset video=1280x720

2. Partition Drives
    a. List partitions: fdisk -l
	b. Start fdisk: fdisk /dev/sdX
	c. make GPT partitions for... 
		EFI: 550M, should have partition type 'EFI System'
		SWAP: generally equal to RAM
		ROOT: rest of drive
	d. format partitions: 
        EFI: mkfs.fat -F32 /dev/sdXx
        ROOT: mkfs.ext4 /dev/sdXx
	e. designate swap partition: mkswap /dev/<swp> && swapon /dev/<swp>
	f. mount drives
		mount /dev/<root> /mnt
        mkdir /mnt/boot && mount /dev/<efi> /mnt/boot
    NOTE: (BIOS) Ignore EFI and set <root> partition to 'Legacy BIOS Bootable'

3. Install Arch
    a. Sort /etc/pacman.d/mirrorlist so that closer mirrors are at the top
    b. curl -O 'https://gideonwashere.github.io/update-mirrors.sh'
    c. pacman -Sy pacman-contrib; run update-mirrors.sh
    d. Intall Arch: pacstrap /mnt base base-devel
    e. Generate fstab: genfstab -U /mnt >> /mnt/etc/fstab
    f. Jump into arch install: arch-chroot /mnt

4. Configure system
    a. curl -O 'https://gideonwashere.github.io/configure-arch.sh' and run it
    b. (SSD Only) Enable TRIM: systemctl enable fstrim.timer
    c. Install vim and git 
    d. Grab dotfiles: git clone 'https://github.com/gideonwashere/dotfiles.git'
    e. Set root password: passwd
        
5. Install & configure bootloader
    a. Install intel-ucode
    b. (EFI) Run configure-systemd-boot | (BIOS) Run configure-syslinux

6. 'exit' back to archiso, unmount drives 'umount -R /mnt', reboot, and remove iso.

7. Users and Security 
    a. Add users: useradd -m -g users -G wheel jake; passwd jake
    b. Grant user sudo privlages: visudo, uncomment wheel entry of choice. 
    c. disable root user: passwd -l root (undo with sudo passwd -u root)
    NOTE: Be SURE sudo works right before you diable root password!
    NOTE: May want to re-clone dotfiles with prefered user

8. NetworkManager (OPTIONAL generally good for laptops) 
    a. Install networkmanager 
    b. start/enable NetworkManager.service
    NOTE: nmcli device wifi connect <SSID> password <pass> hidden yes
    c. (FOR NETCTL) copy a profile to /etc/netctl, then netctl start/enable 'profile'
